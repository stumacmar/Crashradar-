name: FRED Data Cache Builder
on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *" # every 6 hours

permissions:
  contents: write

jobs:
  build-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install requests pandas

      - name: Fetch FRED data and build cache
        env:
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
        run: |
          python - <<'PY'
          import os, json, pandas as pd, requests
          from datetime import datetime

          key = os.getenv("FRED_API_KEY")
          if not key:
              raise SystemExit("Missing FRED_API_KEY")

          def get_fred(sid):
              url = "https://api.stlouisfed.org/fred/series/observations"
              r = requests.get(url, params={
                  "series_id": sid,
                  "api_key": key,
                  "file_type": "json"
              }, timeout=30)
              r.raise_for_status()
              d = pd.DataFrame(r.json()["observations"])
              d["value"] = pd.to_numeric(d["value"], errors="coerce")
              d["date"] = pd.to_datetime(d["date"])
              return d.dropna()

          D10 = get_fred("DGS10")
          D3M = get_fred("DGS3MO")
          BAA = get_fred("BAA")
          AAA = get_fred("AAA")
          UNR = get_fred("UNRATE")
          SPX = get_fred("SP500")
          NFCI = get_fred("NFCI")

          out = {
              "fetched_at_utc": datetime.utcnow().isoformat()+"Z",
              "series": {
                  "T10Y3M": (D10["value"].iloc[-1] - D3M["value"].iloc[-1]),
                  "CREDIT": (BAA["value"].iloc[-1] - AAA["value"].iloc[-1]),
                  "UN_SLOPE6": (UNR["value"].iloc[-1] - UNR["value"].iloc[-7]),
                  "DD_12M": (SPX["value"].iloc[-1] / SPX["value"].iloc[-252:].max() - 1),
                  "NFCI": NFCI["value"].iloc[-1]
              }
          }

          os.makedirs("data", exist_ok=True)
          with open("data/fred_cache.json", "w") as f:
              json.dump(out, f, indent=2)

          print("âœ… Data written to data/fred_cache.json")
          PY

      - name: Commit cache if changed
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add data/fred_cache.json || true
          git commit -m "auto: update FRED cache" || echo "no change"
          git push
